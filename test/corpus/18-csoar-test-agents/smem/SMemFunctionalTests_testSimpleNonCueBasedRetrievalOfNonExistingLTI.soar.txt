================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_testSimpleNonCueBasedRetrievalOfNonExistingLTI.soar
================================================================================

smem --set learning on

## This test will test whether you can retrieve a non-existing LTI.sp {
## However, if you just do @X1 it will fail with an assertion because you
## Cannot have non-existing ltis in productions.  So this test is testing
## whether you can retrieve a non-existing LTI via a string which should fail.

sp {propose*query
  (state <s> ^superstate nil)
--> 
  (<s> ^operator.name query)
}

sp {apply*query
  (state <s> ^operator.name query
             ^smem.command <sc>)
-->
  (<sc> ^retrieve |@X1|)
}

sp {success
  (state <s> ^smem.result.bad-cmd)
-->
  (write |Success!|)
  (halt)
}



--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e'))
  (production
    (beginning
      (prod_name))
    (LHS
      (cond
        (positiveCond
          (condsForOneId
            (condType)
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))))))))
    (action
      (variable)
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (constant
              (symConstant
                (string))))))))
  (production
    (beginning
      (prod_name))
    (LHS
      (cond
        (positiveCond
          (condsForOneId
            (condType)
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (variable))))))))))
    (action
      (variable)
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (constant
              (symConstant
                (quoted))))))))
  (production
    (beginning
      (prod_name))
    (LHS
      (cond
        (positiveCond
          (condsForOneId
            (condType)
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))))))))
    (action
      (funcCall
        (funcName
          (symConstant
            (string)))
        (rhsValue
          (constant
            (symConstant
              (quoted))))))
    (action
      (funcCall
        (funcName
          (symConstant
            (string)))))))
