================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_testSimpleNonCueBasedRetrievalOfNonExistingLTI.soar
================================================================================

smem --set learning on

## This test will test whether you can retrieve a non-existing LTI.sp {
## However, if you just do @X1 it will fail with an assertion because you
## Cannot have non-existing ltis in productions.  So this test is testing
## whether you can retrieve a non-existing LTI via a string which should fail.

sp {propose*query
  (state <s> ^superstate nil)
--> 
  (<s> ^operator.name query)
}

sp {apply*query
  (state <s> ^operator.name query
             ^smem.command <sc>)
-->
  (<sc> ^retrieve |@X1|)
}

sp {success
  (state <s> ^smem.result.bad-cmd)
-->
  (write |Success!|)
  (halt)
}



--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (quoted)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))))
    (funcCall
      (funcName
        (string))
      (quoted))
    (funcCall
      (funcName
        (string)))))
