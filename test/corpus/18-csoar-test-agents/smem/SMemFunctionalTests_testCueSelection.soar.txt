================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_testCueSelection.soar
================================================================================

smem --set learning on
smem --add {(<x> ^name val ^value 1)}
smem --add {(<x> ^othername val ^value 1)}
smem --add {(<x> ^name val ^value 3 ^notrestrictive t)}
smem --add {(<x> ^name val ^value 5 ^wrongattribute y)}
smem --add {(<x> ^name val ^value 7 ^thirdthing x)}

sp {propose*query 
	(state <s> ^superstate nil 
				^smem <smem>) 
	(<smem> -^result.retrieved) 
--> 
	(<s> ^operator.name query) 
}

sp {apply*query 
	(state <s> ^operator.name query 
				^smem.command <sc>)
--> 
	(<sc> ^query <q>)
	(<q> ^name val
			^value <x>)
}
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 't')
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'n')
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'w')
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'h'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable))))))
