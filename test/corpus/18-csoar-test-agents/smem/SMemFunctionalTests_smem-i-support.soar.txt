================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_smem-i-support.soar
================================================================================

smem --enable
smem --add {
   (<L1> ^value foo ^next <L2>)
   (<L2> ^value bar)
}

sp {propose*init-agent
   (state <s> ^superstate nil
             -^result <cr>
             -^name)
-->
   (<s> ^operator.name init-agent)
}

sp {apply*init-agent*name
   (state <s> ^operator.name init-agent)
-->
   (<s> ^name smem-isupport-crash)
}

sp {apply*init-agent*query
   (state <s> ^name smem-isupport-crash
              ^smem.command <command>)
-->
   (<command> ^query.value foo)
}

sp {apply*init-agent*link-result
   (state <s> ^name smem-isupport-crash
              ^smem.result <sres>)
   (<sres> ^success
           ^retrieved <res>)
-->
   (<s> ^result <res>)
}

sp {propose*retrieve-lti
   (state <s> ^name smem-isupport-crash
              ^result.next <next>)
   (<next> -^value)
-->
   (<s> ^operator <op> +)
   (<op> ^name retrieve-lti
         ^lti <next>)
}

sp {apply*retrieve-lti
   (state <s> ^superstate.operator.lti <lti>
              ^smem.command <scmd>)
-->
   (<scmd> ^retrieve <lti>)
}

sp {apply*retrieve-lti*copy
    (state <s>  ^superstate.operator.lti <lti2>
                ^smem.result <sr>)
    (<sr>   ^retrieved <lti>
            ^success <lti2>)
    (<lti>  ^<attr> <value>)
-->
    (<lti2> ^<attr> <value>)
}

sp {success
   (state <s> ^superstate.superstate.superstate.superstate nil)
-->
   (succeeded)
   (halt)
}


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'v')
    (UNEXPECTED 'n')
    (variable)
    (variable)
    (UNEXPECTED 'v'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (variable)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (variable)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string)))
    (funcCall
      (funcName
        (string)))))
