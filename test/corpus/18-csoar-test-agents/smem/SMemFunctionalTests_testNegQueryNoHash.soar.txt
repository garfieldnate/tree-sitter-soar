================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_testNegQueryNoHash.soar
================================================================================

smem --set learning on

smem --add {(<n1> ^a 1)}

sp {propose-query
	(state <s> ^superstate nil 
				-^goal)
-->
	(<s> ^operator <o> +)
	(<o> ^name first-query)
}

sp {apply-query
	(state <s> ^operator <op>
				^smem.command <cmd>)
	(<op> ^name first-query)
-->
	(<s> ^goal first-query -)
	(<s> ^goal check-result)
	(<cmd> ^query.a 1)
	(<cmd> ^neg-query <nq>)
	(<nq> ^1 2
			^c c
			^.1 .2)
}

sp {elaborate-success
	(state <s> ^smem.result.success)
-->
	(succeeded)
}
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'a')
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (floatConstant)
        (valueMake
          (floatConstant)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))))
    (funcCall
      (funcName
        (string)))))
