================================================================================
UnitTests/SoarTestAgents/smem/SMemFunctionalTests_testSimpleNonCueBasedRetrieval_ActivationBaseLevel_Naive.soar
================================================================================

smem --set activation-mode base-level
smem --set activate-on-query on

smem --set base-update-policy naive
smem --set learning on
# Add some data with multiple levels
smem --add {
  (@1 ^name foo ^location @2)
  (@2 ^x 1 ^y 2 ^z 3) 
  (@3 ^name bar ^location @4)
  (@4 ^x 2 ^y 3 ^z 1)
}

sp {propose*first-query
  (state <s> ^superstate nil 
  		    -^first
            -^second
            -^third
            -^fourth
            -^fifth)
--> 
  (<s> ^operator.name first-query)
}

sp {apply*first-query
  (state <s> ^operator.name first-query
             ^smem.command <sc>)
-->
  (<sc> ^query.name foo)
  (<s> ^first done)
}

sp {propose*second-query
  (state <s> ^superstate nil 
  			 ^first done
  			-^second)
--> 
  (<s> ^operator.name second-query)
}

sp {apply*second-query
  (state <s> ^operator.name second-query
             ^smem.command <sc>)
  (<sc> ^query <first-query>)
-->
  (<sc> ^query <first-query> -)
  (<sc> ^query <second-query>)
  (<second-query> ^name bar)
  (<s> ^second done)
  (<s> ^first done -)
}

sp {propose*third-query
  (state <s> ^superstate nil 
  			 ^second done
  			-^third)
--> 
  (<s> ^operator.name third-query)
}

sp {apply*third-query
  (state <s> ^operator.name third-query
             ^smem.command <sc>)
  (<sc> ^query <first-query>)
-->
  (<sc> ^query <first-query> -)
  (<sc> ^query <second-query>)
  (<second-query> ^name foo)
  (<s> ^third done)
  (<s> ^second done -)
}

sp {propose*fourth-query
  (state <s> ^superstate nil 
  			 ^third done
  			-^fourth)
--> 
  (<s> ^operator.name fourth-query)
}

sp {apply*fourth-query
  (state <s> ^operator.name fourth-query
             ^smem.command <sc>)
  (<sc> ^query <first-query>)
-->
  (<sc> ^query <first-query> -)
  (<sc> ^query <second-query>)
  (<second-query> ^name <d>)
  (<s> ^fourth done)
  (<s> ^third done -)
}

sp {propose*fifth-step
  (state <s> ^superstate nil
             ^fourth done
            -^third)
-->
  (<s> ^operator.name fifth-step)
}

sp {apply*fifth-step
  (state <s> ^operator.name fifth-step
             ^fourth done
             ^smem.result.retrieved <result>)
-->
  (<s> ^fourth <result>)
  (<s> ^fourth done -)
}

sp {success
  (state <s> ^smem.result.retrieved <lti>
             ^fourth <result>)
  (<result> ^name foo)
-->
  (write |Success!|)
  (halt)
  #(cmd smem -b test)
}


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e')
    (UNEXPECTED 'm')
    (UNEXPECTED 'l')
    (UNEXPECTED 'e')
    (UNEXPECTED 'n')
    (UNEXPECTED 'q')
    (UNEXPECTED 'e')
    (UNEXPECTED 'u')
    (UNEXPECTED 'p')
    (UNEXPECTED 'e')
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (intConstant)
    (UNEXPECTED 'n')
    (UNEXPECTED 'l')
    (intConstant)
    (intConstant)
    (UNEXPECTED 'x')
    (intConstant)
    (UNEXPECTED 'y')
    (intConstant)
    (UNEXPECTED 'z')
    (intConstant)
    (intConstant)
    (UNEXPECTED 'n')
    (UNEXPECTED 'l')
    (intConstant)
    (intConstant)
    (UNEXPECTED 'x')
    (intConstant)
    (UNEXPECTED 'y')
    (intConstant)
    (UNEXPECTED 'z')
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string))
      (attrValueTests
        (string))
      (attrValueTests
        (string))
      (attrValueTests
        (string))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (quoted))
    (funcCall
      (funcName
        (string)))))
