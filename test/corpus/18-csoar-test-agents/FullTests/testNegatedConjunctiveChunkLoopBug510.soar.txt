================================================================================
UnitTests/SoarTestAgents/FullTests/testNegatedConjunctiveChunkLoopBug510.soar
================================================================================

chunk always

sp {elaborate*state
   (state <s> ^superstate <ss>)
   (<ss> ^operator.name <name>
         ^test-structure <ts>)
-->
   (<s> ^name <name>
        ^test-structure <ts>)
}

sp {elaborate*initialize*top-state
   (state <s> ^superstate nil)
-->
   (<s> ^test-structure <ts>)
   (<ts> ^foo <f>)
}

sp {propose*test
   (state <s> ^superstate nil)
-->
   (<s> ^operator <o> +)
   (<o> ^name test)
}

sp {propose*test*substate
   (state <s> ^name test
              ^test-structure <ts>)
   (<ts> ^foo <f>
        -^foo { <x> <> <f> })
-->
   (<s> ^operator <o> +)
   (<o> ^name test)
}

sp {apply*test*substate
   (state <s> ^superstate { <ss> <> nil }
              ^operator <o>
              ^test-structure <ts>)
-->
   (<ts> ^crash <crash>)
}

sp {done
   (state <s> ^superstate nil
              ^test-structure.crash <c>)
-->
   (halt)
}


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'a'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (conjunctiveTest
            (variable)
            (relationalTest
              (relation)
              (variable))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (conjunctiveTest
            (variable)
            (relationalTest
              (relation)
              (string)))))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (funcCall
      (funcName
        (string)))))
