================================================================================
UnitTests/SoarTestAgents/FullTests/water-jug-rl/empty.soar
================================================================================

# If the task is water-jug and there is a jug that is not empty,
# then propose emptying that jug.

sp {water-jug*propose*empty
   (state <s> ^name water-jug
              ^jug <j>)
   (<j> ^contents > 0)
-->
   (<s> ^operator <o> +)
   (<o> ^name empty
        ^empty-jug <j>)}

# RL Value function for the set of actions involving emptying jugs
gp {rl*water-jug*empty
   (state <s> ^name water-jug 
              ^operator <op> +
              ^jug <j1> <j2>)
   (<op> ^name empty 
         ^empty-jug.volume [3 5])
   (<j1> ^volume 3 
         ^contents [0 1 2 3])
   (<j2> ^volume 5 
         ^contents [0 1 2 3 4 5])
-->
   (<s> ^operator <op> = 0)
}

# If the task is water-jug and the empty operator is selected for a given jug, 
# then set that jug's contents to be 0 and its empty to be its volume.
sp {water-jug*apply*empty
   (state <s> ^name water-jug
              ^operator <o>
              ^jug <j>)
   (<o> ^name empty
        ^empty-jug <j>)
   (<j> ^volume <volume>
        ^contents <contents>)
-->
   (<j> ^contents 0
        ^contents <contents> - )}


--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (relationalTest
            (relation)
            (singleTest
              (string))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (ERROR
    (UNEXPECTED 'g')
    (UNEXPECTED 'r')
    (UNEXPECTED 'w')
    (UNEXPECTED 'j')
    (UNEXPECTED 'e')
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'j')
    (UNEXPECTED 'p')
    (variable)
    (UNEXPECTED 'j')
    (variable)
    (variable)
    (variable)
    (UNEXPECTED 'n')
    (UNEXPECTED 'e')
    (UNEXPECTED 'j')
    (UNEXPECTED 'v')
    (intConstant)
    (intConstant)
    (UNEXPECTED ']')
    (variable)
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'o')
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (UNEXPECTED ']')
    (variable)
    (UNEXPECTED 'v')
    (intConstant)
    (UNEXPECTED 'o')
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (UNEXPECTED ']')
    (variable)
    (UNEXPECTED 'p')
    (variable)
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))))))
