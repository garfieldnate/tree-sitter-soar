================================================================================
UnitTests/SoarTestAgents/epmem/EpMemFunctionalTests_testSingleStoreRetrieve.soar
================================================================================

##!
# @file
#
# @created alex.nickels 20130613

#epmem --set exclusions epmem
epmem --set trigger dc
epmem --set learning on
watch --epmem

sp {propose*initialize-epmem-rand
   (state <s> ^superstate nil
             -^name)
-->
   (<s> ^operator <o> +)
   (<o> ^name initialize-epmem-rand)
}

sp {apply*initialize-epmem-rand
   (state <s> ^operator <op>)
   (<op> ^name initialize-epmem-rand)
-->
   (<s> ^name epmem-rand
        ^random.num 42)
}

sp {epmem-rand*propose*remember
   (state <s> ^name epmem-rand
              ^random)
-->
   (<s> ^operator <op> + =)
   (<op> ^name remember)
}

sp {apply*remember*cue
   (state <s> ^operator <op>
              ^random <rand>
              ^epmem.command <cmd>)
   (<op> ^name remember)
   (<rand> ^num <num>)
-->
   (write |Removing: | <num>)
   (<s> ^random <rand> -)
   (<cmd> ^query.random <remember-random>)
}

sp {done*succeeded
   (state <s> ^epmem.result.retrieved.random.num 42)
-->
   (write |Remebered number| (crlf))
   (halt)
}

sp {done*failed
   (state <s> ^name epmem-rand
              ^epmem.result.retrieved.random <n>) 
   -(<n> ^num 42)
-->
   (write |Failed to remebered number| (crlf))
   (halt)
}
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'e')
    (UNEXPECTED 'e')
    (UNEXPECTED 'e')
    (UNEXPECTED 'e'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (quoted)
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (funcCall
      (funcName
        (string))
      (quoted)
      (crlf))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (negativeCond
      (condsForOneId
        (singleTest
          (variable))
        (attrValueTests
          (singleTest
            (string))
          (valueTest
            (singleTest
              (string))))))
    (funcCall
      (funcName
        (string))
      (quoted)
      (crlf))
    (funcCall
      (funcName
        (string)))))
