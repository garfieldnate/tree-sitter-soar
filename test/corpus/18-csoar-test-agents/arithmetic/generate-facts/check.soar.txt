================================================================================
UnitTests/SoarTestAgents/arithmetic/generate-facts/check.soar
================================================================================

sp {generate-facts*propose*check
   (state <s> ^name generate-facts
              ^phase check)
-->
   (<s> ^operator <op> + =)
   (<op> ^name check)
}

sp {apply*check*new
   (state <s> ^operator <op>
              ^smem <smem>)
   (<op> ^name check)
   (<smem> ^result.failure <q>
           ^command <cmd>)
   (<cmd> ^query <q>)
-->
   (<s> ^phase check -
        ^phase store)
   (<cmd> ^query <q> -
          ^store <arithmetic>)
}

sp {apply*check*existing
   (state <s> ^operator <op>
              ^smem.result.success <q>
              ^superstate <ss>)
   (<op> ^name check)
   (<ss> ^operator <ss-op>)
-->
   (<ss> ^arithmetic.facts existing)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (floatConstant))
        (valueTest
          (string))
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (string))
        (valueMake
          (string))))))
