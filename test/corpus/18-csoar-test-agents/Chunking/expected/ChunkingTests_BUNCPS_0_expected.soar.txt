================================================================================
UnitTests/SoarTestAgents/Chunking/expected/ChunkingTests_BUNCPS_0_expected.soar
================================================================================

sp {answer*condition-match*elaborate*results*StateNoChange*t3-1
    (state <s1> ^superstate nil ^condition <c1> ^topstate <s2>)
    (<c1> ^name <c3> ^name { << red blue >> <c2> })
    (<s2> ^object <n1>)
    (<n1> ^linguistic-desc <d1>)
    (<d1> ^word <c3>)
    -->
    (<s2> ^result <o1> +)
    (<o1> ^object <n1> +)
}




--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (disjunctionTest
              (string)
              (string))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))))
