================================================================================
UnitTests/SoarTestAgents/Chunking/expected/ChunkingTests_NC_Disjunction_expected.soar
================================================================================

sp {answer*apply*snc*t3-1
    (state <s2> ^superstate <s1>)
    (<s2> -^structure-type { << V VP >> <s*1> })
    (<s1> ^superstate nil)
    -->
    (<s2> ^result <v1> +)
}
--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (LHS
      (cond
        (positiveCond
          (condsForOneId
            (condType)
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (variable)))))))))
      (cond
        (positiveCond
          (condsForOneId
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (conjunctiveTest
                    (simpleTest
                      (disjunctionTest
                        (constant
                          (symConstant
                            (string)))
                        (constant
                          (symConstant
                            (string)))))
                    (simpleTest
                      (singleTest
                        (variable))))))))))
      (cond
        (positiveCond
          (condsForOneId
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))))))))
    (action
      (variable)
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (variable))
          (preferenceSpecifier
            (unaryPreference)))))))
