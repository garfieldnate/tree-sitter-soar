================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Literalization_of_NC_and_NCC.soar
================================================================================

# Literalization of NC and NCC

chunk always
watch --learn 2

sp {init
   (state <s> ^superstate nil)
-->
   (<s> ^word object
        ^word2 not-object2)

}

sp {propose*stop
   (state <s> ^superstate.superstate.superstate nil)
-->
    (write (crlf) |Too deep.|)
    (interrupt)
}

sp {propose
    (state <s> ^superstate <ss>)
    (<ss> ^superstate nil
          ^word <w>)
-->
    (<s> ^operator <o> + =)
    (<o> ^word <w>)
}

sp {apply*literalization
    (state <s> ^superstate <ss>
               ^operator <o>)
    (<o> ^word object)
    -->
    (<s> ^sub-result 1 +)
}

sp {make-chunk
    (state <s> ^superstate <ss>
               ^operator <o>
               ^sub-result <r>)
    (<o> ^word <object>)
    (<ss> -^prefix <object>)
    - {(<ss> ^suffix <object>)
       (<ss> ^word { <> <object> <fantasy-object> })}
    -->
    (<ss> ^result <object> +)
}

--------------------------------------------------------------------------------

(source_file
  (command
    (arg))
  (command
    (arg)
    (arg))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (negativeCond
      (conjunctiveCond
        (condsForOneId
          (idTest
            (variable))
          (attrValueTests
            (string)
            (valueTest
              (variable))))
        (condsForOneId
          (idTest
            (variable))
          (attrValueTests
            (string)
            (valueTest
              (conjunctiveTest
                (relationalTest
                  (relation)
                  (variable))
                (variable)))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))))
