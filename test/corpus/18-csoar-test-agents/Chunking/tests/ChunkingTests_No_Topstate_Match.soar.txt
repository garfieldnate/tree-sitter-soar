================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_No_Topstate_Match.soar
================================================================================

##!
# @file
#
# @created mazzin 20160422
srand 23
chunk always

# Tests for crash that occurred if some rule did not match in top state before a chunk is formed

#sp {init-superstate
#    (state <s> ^superstate nil)
#-->
#    (dont-learn <s>)
#}
#
sp {test-done
    (state <s> ^superstate nil ^test-done)
-->
    (write (crlf) |Chunk produced. Test completed.|)
    (interrupt)
}

sp {init-substate
    (state <s> ^superstate.superstate nil)
-->
    (<s> ^local <l>)
    (<l> ^type substate)
}

sp {propose
    (state <s> ^superstate.superstate nil)
-->
    (<s> ^operator <o> +)
    (<o> ^name test)
}

sp {make-chunk
    (state <s> ^operator.name test
               ^local <l>
               ^superstate <ss>)
  -{(<s> ^operator <o>)
    (<o> ^name not-test
         -^type)
   }
    (<l> ^type substate)
-->
    (<ss> ^test-done true)
}

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'r')
    (intConstant)
    (UNEXPECTED 'a'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (negativeCond
      (conjunctiveCond
        (condsForOneId
          (singleTest
            (variable))
          (attrValueTests
            (singleTest
              (string))
            (valueTest
              (singleTest
                (variable)))))
        (condsForOneId
          (singleTest
            (variable))
          (attrValueTests
            (singleTest
              (string))
            (valueTest
              (singleTest
                (string))))
          (attrValueTests
            (singleTest
              (string))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))))
