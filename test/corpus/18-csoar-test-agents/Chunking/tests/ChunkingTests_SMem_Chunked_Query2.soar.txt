================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_SMem_Chunked_Query2.soar
================================================================================

smem --set learning on
chunk flagged

smem --add {
(<r6> ^handle stack ^foo bar)
}

#default rule
sp {all*elaborate*name
   (state <s> ^superstate.operator.name <name>)
-->
   (<s> ^name <name>)
}

sp {elaborate*handle*to-retrieve
(state <s> ^superstate nil)
-->
(<s> ^retrieve-handle stack)
}


#cause impasse chunk and retrieve
sp {chunk-retrieve*impasse
   (state <s> ^superstate <ss>
              ^choices none
              ^attribute state
              ^impasse no-change)
   (<ss> ^retrieve-handle <handle>)
-->
   (force-learn <s>)
   (<s> ^name chunk-retrieve
        ^linkstate <ss>
        ^handle <handle>)
}

sp {chunk-retrieve*propose*retrieve
(state <s> ^name chunk-retrieve)
-->
(<s> ^operator <o> + =)
(<o> ^name retrieve)
}

sp {retrieve*smem-command
(state <s> ^name retrieve
	   	  ^superstate.handle <ph>
	   	   ^smem.command <sc>)
-->
	(<sc> ^query <q> ^depth 10)
    (<q> ^handle <ph>)
}

sp {retrieve*elaborate*smem-result
(state <s> ^name retrieve
          ^superstate.superstate <ss> #swap with below to not HALT
#	   	   ^superstate <ss> 
	   	   ^smem.result.retrieved <r>)
-->
    (<ss> ^result <r>)
    (interrupt)
}

#sp {chunk-retrieve*elaborate*result
#(state <s> ^name chunk-retrieve
#	   	   ^superstate <ss>
#	   	   ^result <r>)
#-->
#(<ss> ^result <r>)
#}
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'm')
    (UNEXPECTED 'e')
    (UNEXPECTED 'f')
    (UNEXPECTED 'a')
    (variable)
    (UNEXPECTED 'h')
    (UNEXPECTED 'f'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))
          (preferenceSpecifier
            (unaryPreference
              (unaryOrBinaryPreference))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (funcCall
      (funcName
        (string)))))
