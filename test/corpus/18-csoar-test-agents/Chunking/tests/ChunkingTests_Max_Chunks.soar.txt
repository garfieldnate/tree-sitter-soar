================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Max_Chunks.soar
================================================================================

chunk only
chunk max-chunks 2

sp {all*elaborate*name
   (state <s1> ^superstate.operator.name <n2>)
-->
   (<s1> ^name <n2>)
}
sp {all*elaborate*topstate
   (state <s> ^superstate.topstate <ts>)
-->
   (<s> ^topstate <ts>)
}

#initialize topstate with numbers
sp {init*state
   (state <s> ^superstate nil)
-->
   (<s> ^topstate <s> 
		^a 5 6
   		^b 6 7)
}

sp {turn-learning-on
(state <s> ^superstate.superstate nil)
-->
	(force-learn <s>)
	(<s> ^name learn-state)
}

sp {learn-state*propose*resolve-conditions
(state <s> ^name learn-state)
-->
	(<s> ^operator <o> + =)
 	(<o> ^name resolve-conditions)
}

sp {chunk*resolve-conditions*elaborate*addition
(state <s> ^name resolve-conditions
	   	   ^topstate <ts>)
	(<ts> ^a <x1> ^b <x2>)
-->
	(<ts> ^result <o1>)
    (<o1> ^1 (+ <x1> <x2>))
}

#exp -w chunk*resolve-conditions*elaborate*addition
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'n')
    (UNEXPECTED 'm')
    (UNEXPECTED ')
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (string))
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string))
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (funcCall
      (funcName
        (string))
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))
          (preferenceSpecifier
            (unaryPreference
              (unaryOrBinaryPreference))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName)
            (variable)
            (variable)))))))
