================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_NCC_from_Backtrace.soar
================================================================================

# Negative conjunctive conditions

srand 23
chunk always

sp {init-superstate
    (state <s> ^superstate nil)
-->
    (<s> ^test-item2 9 7)
    (write (crlf) |Starting chunking unit test.|)
}

sp {propose*top
    (state <s> ^superstate nil)
-->
    (<s> ^operator <o>)
    (<o> ^name do-test)
}

sp {apply*test-done
    (state <s> ^superstate nil ^test-done)
-->
    (write (crlf) |Chunk produced. Test completed.|)
    (succeeded)
    (interrupt)
}

sp {apply*test-failed
    (state <s> ^superstate.superstate.superstate.superstate nil)
-->
    (write (crlf) |Chunk not produced.  Test failed.|)
    (interrupt)
}

sp {propose*test
    (state <s> ^superstate.superstate nil)
-->
    (<s> ^operator <o> +)
    (<o> ^name test)}

sp {apply25f1
    (state <s> ^superstate <ss>
               ^operator)
    (<ss> ^test-item2 <y>
          ^test-item2 { < <y> <x> })
         -{(<ss> ^test-item2 { <> <x> <> <y> <dupe> })}
-->
    (<s> ^lowest <x>)
}

sp {apply25f2
    (state <s> ^superstate <ss>
               ^operator <o>
               ^lowest <low>)
    (<ss> ^test-item2 <y>
          ^test-item2 { > <y> <x> })
         -{(<ss> ^test-item2 { <> <x> > <x> <dupe> })}
-->
    (<ss> ^highest <x> ^lowest <low>
          ^test-done 1)
}

#run
#ctf expected/chunk25.soar print -cf
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'r')
    (intConstant)
    (UNEXPECTED 'a'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))
        (valueMake
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string)))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable)))))
    (negativeCond
      (conjunctiveCond
        (condsForOneId
          (idTest
            (variable))
          (attrValueTests
            (string)
            (valueTest
              (conjunctiveTest
                (relationalTest
                  (relation)
                  (variable))
                (relationalTest
                  (relation)
                  (variable))
                (variable)))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable)))))
    (negativeCond
      (conjunctiveCond
        (condsForOneId
          (idTest
            (variable))
          (attrValueTests
            (string)
            (valueTest
              (conjunctiveTest
                (relationalTest
                  (relation)
                  (variable))
                (relationalTest
                  (relation)
                  (variable))
                (variable)))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (string))))))
