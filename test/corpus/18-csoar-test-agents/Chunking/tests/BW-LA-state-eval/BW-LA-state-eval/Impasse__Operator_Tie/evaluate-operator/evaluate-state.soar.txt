================================================================================
UnitTests/SoarTestAgents/Chunking/tests/BW-LA-state-eval/BW-LA-state-eval/Impasse__Operator_Tie/evaluate-operator/evaluate-state.soar
================================================================================

sp {evaluate-operator*propose*evaluate-state
   (state <s> ^name evaluate-operator
              ^tried-tied-operator)
-->
   (<s> ^operator <op> + >)
   (<op> ^name evaluate-state)
}
#
sp {apply*evaluate-state*0
   (state <s> ^operator.name evaluate-state
              ^inplace-object.name table
              ^outplace-object.name C
              ^ontop <o1> <o2> <o3>)
   (<o1> ^top-block.name B
         ^bottom-block.name <x>)
   (<o2> ^top-block.name A
         ^bottom-block.name <y>)
   (<o3> ^top-block.name C
         ^bottom-block.name <z>)
-->
   (<s> ^expected-value .0)
   (write (crlf) |Expected value: 0.0|)}

sp {apply*evaluate-state*3
   (state <s> ^operator.name evaluate-state
              ^inplace-object.name C
              ^outplace-object.name B
              ^ontop <o1>)
   (<o1> ^top-block.name A
         ^bottom-block.name <x>)
-->
   (<s> ^expected-value .3)
   (write (crlf) |Expected value: 0.3|)}


sp {apply*evaluate-state*6
   (state <s>  ^operator.name evaluate-state
               ^inplace-object.name C
               ^inplace-object.name B
               ^outplace-object.name A)
-->
   (<s> ^expected-value .6)
   (write (crlf) |Expected value: 0.6|)}


sp {apply*evaluate-state*1
   (state <s>  ^operator.name evaluate-state
               ^inplace-object.name C
               ^inplace-object.name B
               ^inplace-object.name A)
-->
   (<s> ^expected-value 1.0)
   (write (crlf) |Expected value: 1.0|)}
--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (variable))
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))))
