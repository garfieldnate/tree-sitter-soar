================================================================================
UnitTests/SoarTestAgents/Chunking/tests/water-jug-tie/water-jug-tie/Impasse__Operator_Tie/evaluate-operator.soar
================================================================================

## Simple example of an operator in a tie subgoal
## will just create symbolic evaluation such as best, worst

sp {Impasse__Operator_Tie*propose*evaluate-operator
   (state <s> ^name Impasse__Operator_Tie
              ^evaluation <x>)
  -(<x> ^value)
-->
   (<s> ^operator <op> + =)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
}

sp {apply*evaluate-operator*none
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator none)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
-->
   (<x> ^value equal)
}

sp {apply*evaluate-operator*pour*after-fill-empty
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator << empty fill >>)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name pour)
-->
   (<x> ^value best)
}

sp {apply*evaluate-operator*pour*after-pour
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator pour)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name pour)
-->
   (<x> ^value worst)
}

sp {apply*evaluate-operator*fill-empty*after-empty-fill
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator << empty fill >>)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name << fill empty >>)
-->
   (<x> ^value worst)
}

sp {apply*evaluate-operator*fill-empty*after-pour
   (state <s> ^operator <op>
              ^evaluation <x>
              ^last-operator pour)
   (<op> ^name evaluate-operator
         ^evaluation <x>)
   (<x> ^super-operator.name << fill empty >>)
-->
   (<x> ^value equal)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (negativeCond
      (condsForOneId
        (idTest
          (variable))
        (attrValueTests
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (disjunctionTest
            (string)
            (string)))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (disjunctionTest
            (string)
            (string)))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (disjunctionTest
            (string)
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (disjunctionTest
            (string)
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))))
