================================================================================
UnitTests/SoarTestAgents/Chunking/tests/water-jug-tie/water-jug-tie/Impasse__Operator_Tie/create-preferences.soar
================================================================================

sp {Impasse__Operator_Tie*propose*create-preferences
   (state <s> ^name Impasse__Operator_Tie)
   # Negated conjunction that tests that there is no evaluation that does not have a value - all have values
  -{(<s> ^evaluation <x>)
   -(<x> ^value)}
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name create-preferences)
}

sp {apply*create-preferences*best
   (state <s> ^operator <op>
              ^evaluation <x>
              ^superstate <ss>)
   (<op> ^name create-preferences)
   (<x> ^super-operator <so>
        ^value best)
-->
   (<ss> ^operator <so> >, =)
}

sp {apply*create-preferences*worst
   (state <s> ^operator <op>
              ^evaluation <x>
              ^superstate <ss>)
   (<op> ^name create-preferences)
   (<x> ^super-operator <so>
        ^value worst)
-->
   (<ss> ^operator <so> <, =)
}

sp {apply*create-preferences*equal
   (state <s> ^operator <op>
              ^evaluation <x>
              ^superstate <ss>)
   (<op> ^name create-preferences)
   (<x> ^super-operator <so>
        ^value equal)
-->
   (<ss> ^operator <so> =)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (negativeCond
      (conjunctiveCond
        (condsForOneId
          (singleTest
            (variable))
          (attrValueTests
            (singleTest
              (string))
            (valueTest
              (singleTest
                (variable)))))
        (negativeCond
          (condsForOneId
            (singleTest
              (variable))
            (attrValueTests
              (singleTest
                (string)))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))))
