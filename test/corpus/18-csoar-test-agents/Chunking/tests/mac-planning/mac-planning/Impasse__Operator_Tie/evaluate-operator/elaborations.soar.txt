================================================================================
UnitTests/SoarTestAgents/Chunking/tests/mac-planning/mac-planning/Impasse__Operator_Tie/evaluate-operator/elaborations.soar
================================================================================

# this rule will cause a warning during loading in Soar; that warning can be ignored
#set warnings off
output warnings off
sp {mac*evaluate*state*failure*duplicate
   (state <s2>  ^superstate.superstate <s1>
                ^right-bank <rb2>
                ^left-bank <lb2>
                ^boat <bank>
                ^tried-tied-operator
                ^desired <d>)
   (<rb2> ^missionaries <rbm> ^cannibals <rbc>)
   (<lb2> ^missionaries <lbm> ^cannibals <lbc>)
   (<s1> ^right-bank <rb>
         ^left-bank <lb>
         ^boat <bank>)
   (<rb> ^missionaries <rbm> ^cannibals <rbc>)
   (<lb> ^missionaries <lbm> ^cannibals <lbc>)
    -->
   (write (crlf) |Duplicate State Detected.|)
   (<s2> ^failure <d>)}

sp {mac*evaluate*state*failure*duplicate2
   (state <s2>  ^superstate.superstate.superstate.superstate <s1>
                ^right-bank <rb2>
                ^left-bank <lb2>
                ^boat <bank>
                ^tried-tied-operator
                ^desired <d>)
   (<rb2> ^missionaries <rbm> ^cannibals <rbc>)
   (<lb2> ^missionaries <lbm> ^cannibals <lbc>)
   (<s1> ^right-bank <rb>
         ^left-bank <lb>
         ^boat <bank>)
   (<rb> ^missionaries <rbm> ^cannibals <rbc>)
   (<lb> ^missionaries <lbm> ^cannibals <lbc>)
   -->
   (write (crlf) |Duplicate State Detected. 2 deep.|)
   (<s2> ^failure <d>)}

#set warnings on
output warnings on

sp {mac*evaluate*state*failure*state-no-change
    (state <s> ^desired <d>
               ^problem-space.name missionaries-and-cannibals)
    (state <ss> ^superstate <s>
                ^attribute state
                ^quiescence t
                ^impasse no-change)
-->
  (write (crlf) |######## STATE NO-CHANGE Failure! #########|)
    (<s> ^failure <d>)}

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'u'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (ERROR
    (UNEXPECTED 'u'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))
