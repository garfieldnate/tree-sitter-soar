================================================================================
UnitTests/SoarTestAgents/Chunking/tests/eight-puzzle/eight-puzzle/Impasse__Operator_Tie/evaluate-operator/elaborations.soar
================================================================================

###
### EIGHT-PUZZLE PROBLEM SPACE:
### STATE EVALUATION
###

 ## A numeric evaluation function,
 ## based on changes by operators, is used
 ## to evaluate state.

###
### EVALUATION: STATE POSITIVE
###

sp {eight*elaborate*state*evaluation*positive*one
   (state <s> ^desired.binding <b2>
              ^tried-tied-operator
              ^tile-cell <c1>
              ^binding <b1>)
   (<b1> ^cell <c1> ^tile <v1>)
   (<b2> ^cell <c1> ^tile <v1>)
-->
   (<s> ^numeric-value 1)}

###
### EVALUATION: STATE NEUTRAL
###

 ## 0 points for not moving tile in or out of its desired cell
  #
sp {eight*elaborate*state*evaluation*neutral*zero
   (state <s> ^desired <d>
              ^tried-tied-operator
              ^tile-cell <c1>
              ^blank-cell <c0>
              ^binding <b1> { <> <b1> <b2> } { <> <b1> <> <b2> <b3> })
   (<d> ^binding <b4> { <> <b4> <b5> })
   (<b1> ^cell <c1> ^tile <v1>)
   (<b2> ^tile <v2>)
   (<b3> ^tile <v3>)
   (<b4> ^cell <c1> ^tile { <> <v1> <v2> })
   (<b5> ^cell <c0> ^tile { <> <v1> <v3> })
-->
   (<s> ^numeric-value 0)}

###
### EVALUATION: STATE NEGATIVE
###

 ## -1 points for moving tile out of its desired cell
  #
sp {eight*elaborate*state*evaluation*negative*one
   (state <s> ^desired.binding <b2>
              ^tried-tied-operator
              ^tile-cell <c1>
              ^binding <b1>
              ^blank-cell <c0>)
   (<b1> ^cell <c1> ^tile <v1>)
   (<b2> ^cell <c0> ^tile <v1>)
-->
   (<s> ^numeric-value -1)}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))))
