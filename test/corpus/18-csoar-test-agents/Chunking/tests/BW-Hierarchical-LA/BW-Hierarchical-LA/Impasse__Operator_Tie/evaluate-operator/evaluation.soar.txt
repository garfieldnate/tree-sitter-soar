================================================================================
UnitTests/SoarTestAgents/Chunking/tests/BW-Hierarchical-LA/BW-Hierarchical-LA/Impasse__Operator_Tie/evaluate-operator/evaluation.soar
================================================================================

sp {move-block*elaborate*succcess
   (state <s> ^name move-block
              ^desired <d>
              ^top-state.ontop <ontop1>)
   (<d> ^moving-block <blockA>
        ^destination <blockB>)
   (<ontop1> ^top-block <blockA>
             ^bottom-block <blockB>)
-->
   (<s> ^success <d>)}

sp {move-block*elaborate*cover*moving-block*failure
   (state <s> ^name move-block
              ^desired <d>
              ^top-state <ss>)
   (<ss> ^ontop <ontop>)
   (<ontop> ^bottom-block <blockA>
            ^top-block <tblock>)
   (<d> ^moving-block <blockA>)
-->
   (<s> ^failure <d>)}
#
#
sp {move-block*elaborate*cover*moving-block*failure2
   (state <s> ^name move-block
              ^tried-tied-operator
              ^desired <d>
              ^top-state <ss>)
   (<ss> ^gripper.holding { <> nothing <blockA> })
   (<d> ^moving-block <> <blockA>)
-->
   (<s> ^failure <d>)}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (string))
            (variable)))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (relationalTest
            (relation)
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))
