================================================================================
UnitTests/SoarTestAgents/Chunking/tests/water-jug-hierarchy/water-jug-hierarchy/fill.soar
================================================================================

# If the task is water-jug and there is a jug that is not full, 
# then propose filling that jug.

sp {water-jug*propose*fill
   (state <s> ^name water-jug
              ^jug <j>)
   (<j> ^empty > 0)
-->
   (<s> ^operator <o> + =)
   (<o> ^name fill
        ^fill-jug <j>)}

# If the task is water-jug and the fill operator is selected for a given jug, 
# then set that jug's contents to be its volume.

#sp {water-jug*apply*fill
#   (state <s> ^name water-jug
#              ^operator <o>
#              ^jug <j>)
#   (<o> ^name fill
#        ^fill-jug <j>)
#   (<j> ^volume <volume>
#        ^contents <contents>)
#-->
#   (<j> ^contents <volume>
#                  <contents> -)}
#

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (LHS
      (cond
        (positiveCond
          (condsForOneId
            (condType)
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string))))))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (singleTest
                      (variable)))))))))
      (cond
        (positiveCond
          (condsForOneId
            (idTest
              (test
                (simpleTest
                  (singleTest
                    (variable)))))
            (attrValueTests
              (attrTest
                (test
                  (simpleTest
                    (singleTest
                      (constant
                        (symConstant
                          (string)))))))
              (valueTest
                (test
                  (simpleTest
                    (relationalTest
                      (relation)
                      (singleTest
                        (constant
                          (intConstant))))))))))))
    (action
      (variable)
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (variable))
          (preferenceSpecifier
            (unaryPreference))
          (preferenceSpecifier
            (unaryPreference
              (unaryOrBinaryPreference))))))
    (action
      (variable)
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (constant
              (symConstant
                (string))))))
      (attrValueMake
        (rhsValue
          (constant
            (symConstant
              (string))))
        (valueMake
          (rhsValue
            (variable)))))))
