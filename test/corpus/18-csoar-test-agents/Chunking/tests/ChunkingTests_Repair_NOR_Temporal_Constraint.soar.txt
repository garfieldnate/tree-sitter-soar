================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Repair_NOR_Temporal_Constraint.soar
================================================================================

# Tests:
# - 

srand 23
smem --enable
chunk always

smem --add {(<t1> ^D X )}
smem --add {(<t2> ^D Y )}

sp {init
    (state <s> ^superstate nil -^result)
-->
    (<s> ^step 1)
}

sp {init2
    (state <s> ^superstate nil ^result -^result2)
-->
    (<s> ^step 2)
}

sp {done
    (state <s> ^superstate nil ^result ^result2)
-->
    (interrupt)
}

sp {propose*top-op
    (state <s> ^superstate nil)
-->
    (<s> ^operator <o> + =)
    (<o> ^name top-op )
}

sp {propose*query-lti
    (state <s> ^superstate <ss>)
    (<ss> ^superstate nil ^operator.name top-op)
-->
    (<s> ^operator <o>)
    (<o> ^name query-lti)
    (write (crlf) |Proposing query operator | <o> )
}

sp {apply*query
    (state <s> ^operator.name query-lti
               ^smem.command <command>)
-->
    (<command> ^query <q> ^depth 5)
    (<q> ^D <x>)
    (write (crlf) |Query command initiated.| )
}

sp {apply*query*success*1
    (state <s> ^operator.name query-lti
               ^smem.result <sres>
               ^superstate <ss>)
    (<ss> ^step 1)
    (<sres> ^success
            ^retrieved <res>)
-->
    (<ss> ^result <res>)
    (write (crlf) |Query successful and result created: | <res> )
}

sp {elab*query*success*2
    (state <s> ^smem.result <sres>
               ^superstate <ss>)
    (<ss> ^step 2)
    (<sres> ^success
            ^retrieved <res>)
-->
    (<s> ^retrieved-copy <res>)
    (<res> ^foo bar)
}

sp {apply*query*success*2
    (state <s> ^operator.name query-lti
               ^retrieved-copy <sres>
               ^superstate <ss>)
    (<ss> ^step 2
          ^result <old-res>)
    (<sres> ^foo <res>)
-->
    (<ss> ^result2 <res>)
    (write (crlf) |Query 2 successful and result created: | <res> )
}
--------------------------------------------------------------------------------

(source_file
  (command
    (arg))
  (ERROR
    (UNEXPECTED 'e')
    (UNEXPECTED 'a'))
  (smemAdd
    (variable)
    (smemAttrValues
      (string)
      (string)))
  (smemAdd
    (variable)
    (smemAttrValues
      (string)
      (string)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string))
      (attrValueTests
        (string)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string))
      (attrValueTests
        (string)))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable))))
