================================================================================
UnitTests/SoarTestAgents/Chunking/tests/default/selection-iterative-deepening/Impasse__Operator_Tie/evaluate-operator/Impasse__Operator_Tie/all-evaluations-failed.soar
================================================================================

sp {selection*propose*all-evaluations-failed2
   (state <s> ^name selection
              ^tied-operator-count 2
              ^evaluate <e1> { <> <e1> <e2> }
             # ^quiescence t
             -^top-selection true
              ^remaining-operators 0)
   (<e1> ^symbolic-value failure)
   (<e2> ^symbolic-value failure)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name all-evaluations-failed)
}

sp {selection*propose*all-evaluations-failed3
   (state <s> ^name selection
              ^tied-operator-count 3
              ^evaluation <e1> { <> <e1> <e2> } { <> <e1> <> <e2> <e3> }
             # ^quiescence t
             -^top-selection true
              ^remaining-operators 0)
   (<e1> ^symbolic-value failure)
   (<e2> ^symbolic-value failure)
   (<e3> ^symbolic-value failure)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name all-evaluations-failed)
}

sp {selection*propose*all-evaluations-failed4
   (state <s> ^name selection
              ^tied-operator-count 4
              ^evaluation <e1> { <> <e1> <e2> } { <> <e1> <> <e2> <e3> } { <> <e1> <> <e2> <> <e3> <e4> }
             # ^quiescence t
             -^top-selection true
              ^remaining-operators 0)
   (<e1> ^symbolic-value failure)
   (<e2> ^symbolic-value failure)
   (<e3> ^symbolic-value failure)
   (<e4> ^symbolic-value failure)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name all-evaluations-failed)
}


sp {selection*propose*all-evaluations-failed5
   (state <s> ^name selection
              ^tied-operator-count 5
              ^evaluation <e1> { <> <e1> <e2> } { <> <e1> <> <e2> <e3> }
                        { <> <e1> <> <e2> <> <e3> <e4> }  { <> <e1> <> <e2> <> <e3> <> <e4> <e5> }
             # ^quiescence t
             -^top-selection true
              ^remaining-operators 0)
   (<e1> ^symbolic-value failure)
   (<e2> ^symbolic-value failure)
   (<e3> ^symbolic-value failure)
   (<e4> ^symbolic-value failure)
   (<e5> ^symbolic-value failure)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name all-evaluations-failed)
}

sp {apply*all-evaluations-failed
   (state <s> ^operator <op>
            #  ^quiescence t
              ^superstate.superstate.operator <o>)
   (<o> ^name evaluate-operator
        ^evaluation <e>)
   (<op> ^name all-evaluations-failed)
-->
   (write (crlf) |Failed | <e>)
   (<e> ^symbolic-value failure)
}
--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable))))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable))))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable))))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable)))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (relationalTest
              (relation)
              (variable))
            (variable))))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (string)
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string))))))
