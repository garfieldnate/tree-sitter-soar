================================================================================
UnitTests/SoarTestAgents/Chunking/tests/default/selection-astar/Impasse__Operator_Tie/evaluate-operator/task-operator.soar
================================================================================

### Example task operator that updates current-location, prior-waypoint, path-cost, prior-path-cost

sp {evaluate-apply*task-operator2
 #interrupt
   :default
   (state <s> ^name evaluate-operator
              ^superstate.operator.evaluation <e>
              ^operator <op>
              ^top-state <ts>)
   (<e> ^path-cost <pc>
        ^current-location <cloc>)
   (<ts> ^current-location <cloc>)
   (<op> ^next-waypoint <nloc>)
   (<cloc> ^id <cid> ^x <cx> ^y <cy>)
   (<nloc> ^id <nid> ^x <nx> ^y <ny>)
-->
 (write (crlf) |##############################|)
 (write (crlf) |Current waypoint: | <cid> | | <cx> | | <cy>)
 (write (crlf) |Next waypoint:    | <nid> | | <nx> | | <ny>)
 (write (crlf) |Range:         | (compute-range <cx> <cy> <nx> <ny>))
 (write (crlf) |Path cost: | (compute-range <cx> <cy> <nx> <ny>))
   (<e> ^path-cost (+ <pc> (compute-range <cx> <cy> <nx> <ny>))
                   <pc> -
        ^current-location <cloc> - <nloc>)
}

sp {evaluate-apply*task-operator3
   :default
   #interrupt
   (state <s> ^name evaluate-operator
              ^superstate.operator.evaluation <e>
              ^operator <op>
              ^top-state <ts>)
   (<e> ^path-cost { <> 0 <pc> }
        ^estimated-cost <ec>
        ^current-location <> <nloc>
        ^updated-estimate true)
   (<op> ^next-waypoint <nloc>)
-->
   (write (crlf) |.....................|)
   (write (crlf) |Remove: | <e> |: | <ec>)
   (<e> ^estimated-cost <ec> -
        ^updated-estimate true -)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable)
      (quoted)
      (variable))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable)
      (quoted)
      (variable))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (funcCall
        (funcName
          (string))
        (variable)
        (variable)
        (variable)
        (variable)))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (funcCall
        (funcName
          (string))
        (variable)
        (variable)
        (variable)
        (variable)))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName)
            (variable)
            (funcCall
              (funcName
                (string))
              (variable)
              (variable)
              (variable)
              (variable))))
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))))
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (string)))
            (singleTest
              (variable)))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (relationalTest
            (relation)
            (singleTest
              (variable)))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))))
      (attrValueMake
        (string)
        (valueMake
          (string)
          (preferenceSpecifier
            (unaryPreference)))))))
