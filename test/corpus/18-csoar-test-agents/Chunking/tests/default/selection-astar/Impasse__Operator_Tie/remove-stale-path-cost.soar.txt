================================================================================
UnitTests/SoarTestAgents/Chunking/tests/default/selection-astar/Impasse__Operator_Tie/remove-stale-path-cost.soar
================================================================================

sp {selection*propose*remove-stale-path-cost
   :default
   (state <s> ^name selection
              ^evaluation <e>)
   (<e> ^path-cost <pc1> { <pc2> > <pc1> })
  -(<e> ^path-cost < <pc1>)
-->
   (<s> ^operator <op> + =, >)
   (<op> ^name remove-stale-path-cost
         ^evaluation <e>)
}

sp {selection*apply*remove-stale-path-cost
   :default
 #interrupt
   (state <s> ^name selection
              ^evaluation <e>
              ^operator <op>)
   (<e> ^path-cost <pc1> { <pc2> > <pc1> })
  -(<e> ^path-cost < <pc1>)
   (<op> ^name remove-stale-path-cost
         ^evaluation <e>)
-->
  # (interrupt)
   (write (crlf) |Remove Stale Path Cost:  | <e>  |: | <pc2> | original: | <pc1>)
   (<e> ^path-cost <pc2> -)
}
--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (variable)
            (relationalTest
              (relation)
              (variable))))))
    (negativeCond
      (condsForOneId
        (idTest
          (variable))
        (attrValueTests
          (string)
          (valueTest
            (relationalTest
              (relation)
              (variable))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))
        (valueTest
          (conjunctiveTest
            (variable)
            (relationalTest
              (relation)
              (variable))))))
    (negativeCond
      (condsForOneId
        (idTest
          (variable))
        (attrValueTests
          (string)
          (valueTest
            (relationalTest
              (relation)
              (variable))))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable)
      (quoted)
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))))
