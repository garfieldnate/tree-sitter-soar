================================================================================
UnitTests/SoarTestAgents/Chunking/tests/default/selection-optimal/Impasse__Operator_Tie/evaluate-operator/elaborations.soar
================================================================================

############## Rules that force optimal solution

sp {evaluate-operator*elaborate*symbolic-depth*from-subgoal*new
   :default
   (state <ss> ^superstate <s>
               ^success-depth <sd>)
   (<s> ^operator <so>
        ^evaluation <e>)
   (<so> ^name evaluate-operator
         ^evaluation <e>
         ^evaluation.desired <eb>)
-->
   (<e> ^success-depth <sd>)}

sp {selection*compute*failure-evaluation-exceed-cutoff*new
   :default
   (state <task-g> ^depth <depth>
                   ^quiescence t
                   ^desired <d>
                   ^superstate <eval-s>)
   (<eval-s> ^evaluation.success-depth { <sdepth> <= <depth> })
-->
   (write (crlf) |Exceeded success depth: | <sdepth> | with depth | <depth>)
   (<task-g> ^partial-failure <d>)}
--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (floatConstant))
        (valueTest
          (string))
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (flag)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (conjunctiveTest
            (variable)
            (relationalTest
              (relation)
              (variable))))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))
