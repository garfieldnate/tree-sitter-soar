================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Deep_Copy_Identity_Expansion.soar
================================================================================

chunk always
srand 1

sp {init
    (state <s> ^superstate nil)
-->
    (<s> ^a <a>)
    (<a> ^b <b> ^c <c> )
    (<b> ^a <a> ^d <d>)
    (<c> ^b <b>)
    (<d> ^foo bar)
}

sp {propose
    (state <s> ^superstate <ss>)
    (<ss> ^superstate nil)
-->
    (<s> ^operator <o> +)
    (<o> ^name deep-copy)}

sp {deep-copy
    (state <s> ^operator.name deep-copy
               ^superstate.a <a>)
-->
    (<s> ^dc-a (deep-copy <a>))
}

### Make a chunk based on deep-copied results
#sp {deep-copy
#    (state <s> ^operator.name deep-copy
#               ^superstate.a <a>)
#    (<a> ^b <b> ^c <c> )
#    (<b> ^a <a> ^d <d>)
#    (<c> ^b <b>)
#    (<d> ^foo <bar>)
#-->
#    (<s> ^dc-a <a1>)
#    (<a1> ^b <b1> ^c <c1> )
#    (<b1> ^a <a1> ^d <d1>)
#    (<c1> ^b <b1>)
#    (<d1> ^foo <bar1>)
#}

# Test deep-copy works on top-state
sp {deep-copy-top
    (state <s> ^a <a>)
-->
    (<s> ^dc-top-a (deep-copy <a>))
}

## Make a chunk based on deep-copied results
sp {apply1
    (state <s> ^operator <o>
               ^superstate <ss>
               ^dc-a <a>)
-->
    (<ss> ^result1 <a>)

}
#
### Make a chunk based on deep-copied results
sp {apply2
    (state <s> ^operator <o>
               ^superstate <ss>
               ^dc-a <a>)
    (<o> ^name deep-copy)
    (<a> ^b <b> ^c <c> )
    (<b> ^a <a> ^d <d>)
    (<c> ^b <b>)
    (<d> ^foo <bar>)
-->
    (<ss> ^result2 <a>)
    (<a> ^b <b> ^c <c> )
    (<b> ^a <a> ^d <d>)
    (<c> ^b <b>)
    (<d> ^foo <bar>)
}

sp {real-copy
   (state <s> ^superstate.a <a>)
-->
   (<s> ^a-real <a>)
}
#
## Make a chunk that is a deep-copy directly to top-state
## This rule current fails to create a chunk b/c copied items
## are added but cannot be grounded by variablized rhs action
#
sp {apply3
    (state <s> ^operator <o>
               ^superstate <ss>
               ^a-real <a>)
    (<o> ^name deep-copy)
    (<a> ^b <b> ^c <c> )
    (<b> ^a <a> ^d <d>)
    (<c> ^b <b>)
    (<d> ^foo bar)
-->
    (<ss> ^result3 (deep-copy <a>))
}

sp {apply4
    (state <s> ^operator <o> ^dc-a <a> ^superstate <ss>)
    (<ss> ^result1 ^result2 ^result3 ^a <a2>)
-->
    (<ss> ^result4 <a> ^result4b <a2>)
}


sp {apply*test-done
    (state <s> ^result3 <r>)
-->
    (write (crlf) |Chunk created. Stopping.| <s> | | <r> (crlf))
    (interrupt)
}


--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'a')
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted)
      (variable)
      (quoted)
      (variable)
      (crlf))
    (funcCall
      (funcName
        (string)))))
