================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_RHS_Math_Abs.soar
================================================================================

# Tests:
# - 

srand 23
chunk always

sp {init
   (state <s> ^superstate nil)
-->
   (<s> ^x 2 ^y 3 ^z 4 ^n -200)
}

sp {propose
   (state <s> ^superstate.superstate nil)
-->
   (<s> ^operator <o> +)
}

sp {apply-intermediate
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<ss> ^x <x> ^y <y> ^z <z>)
-->
   (<s> ^(+ <x> <y>) (+ 2 <z>))
   }


sp {apply-intermediate-zero
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<ss> ^x <x>)
-->
   (<s> ^literal (abs (+ <x> <x>)))
#   (<s> ^literal (+ <x> <x>))
      }


sp {make-chunk
   (state <s> ^operator <o>
              ^{ > 1 <attr> } { < 200 <sum> }
              ^superstate <ss>)
   (<ss> ^x <x> ^n <n>)
-->
   (<ss> ^result (* <sum> <x>)
         ^result2 (abs <sum>))
   }


sp {make-chunk-abs
   (state <s> ^operator <o>
              ^literal <l>
              ^superstate <ss>)
   (<ss> ^n <n>)
-->
   (<ss> ^result (abs (+ <n> <n>))
         ^result2 (abs <l>))
   }

sp {done
    (state <s> ^result ^result2)
-->
    (interrupt)
    }

--------------------------------------------------------------------------------

(source_file
  (command
    (arg))
  (command
    (arg))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (funcCall
          (funcName)
          (variable)
          (variable))
        (valueMake
          (funcCall
            (funcName)
            (string)
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (funcCall
              (funcName)
              (variable)
              (variable)))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (conjunctiveTest
          (relationalTest
            (relation)
            (string))
          (variable))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (string))
            (variable))))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName)
            (variable)
            (variable))))
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (funcCall
              (funcName)
              (variable)
              (variable)))))
      (attrValueMake
        (string)
        (valueMake
          (funcCall
            (funcName
              (string))
            (variable))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string))
      (attrValueTests
        (string)))
    (funcCall
      (funcName
        (string)))))
