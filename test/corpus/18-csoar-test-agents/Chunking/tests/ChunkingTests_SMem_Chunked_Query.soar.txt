================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_SMem_Chunked_Query.soar
================================================================================

# Tests:
# - 

chunk always
chunk add-ltm-links off

smem --set learning on
srand 7

smem --add {
    (@1 ^handle goal ^procedural @2 ^predicate @5)
    (@2 ^arg1 @6)
    (@5 ^1 @3)
    (@3 ^default @4)
    (@4 ^name pantry)
}

sp {anystate*elaborate*name*superoperator
    (state <s> ^superstate.operator.name <name>)
-->
    (<s> ^name <name>)
}

###########################################################################
# Operator: smem query
# If you add wme ^smem-query-cue <cue> to any state, it will cue the semantic memory for the substructure


############################################################################
# Operator: smem lti retrieval operator which can be fired on any state
# If you add the wme ^query-lti <lti> to ANY state, it will do the retrieval
#   of the substructure for epmem
# Will add a ^queryd-lti <lti> to the state when done


sp {anystate*propose*smem-query
    (state <s> ^smem-query <query>)
    (<query> ^cue <cue>
            -^result)
-->
    (<s> ^operator <o> + > =)
    (<o> ^name smem-query
         ^query-info <query>)
}

sp {anystate*apply*smem-query*create*query*command
    (state <s> ^operator <o>
               ^smem.command <cmd>)
    (<o> ^name smem-query
         ^query-info.cue <cue>)
-->
    (<cmd> ^query <cue>)
}

sp {anystate*apply*smem-query*copy*params
    (state <s> ^operator <o>
               ^smem.command <cmd>)
    (<o> ^name smem-query
         ^query-info <info>)
    (<info> ^{ <att> <> cue <> result } <val>)
-->
    (<cmd> ^<att> <val>)
}
#
#sp {new*anystate*apply*smem-query*clear*command
#   (state <s> ^smem.command <cmd>
#         ^operator <op>)
#   (<op> ^name smem-query-new
#        ^identifier <lti>)
#   (<cmd> ^{<command> << query store query >>} {<olti> <> <lti>})
#-->
#   (<cmd> ^<command> <olti> -)
#}

sp {anystate*apply*smem-query*create*result*success
    (state <s> ^operator <o>
               ^smem.result <res>
               ^smem.result.success <cue>)
    (<o> ^name smem-query
         ^query-info <info>)
    (<info> ^cue <cue>)
    (<res> ^success <cue>
           ^retrieved <top-lti>
          -^retrieved.<att> <top-lti>)
-->
    (<info> ^result <top-lti>)
}

sp {anystate*apply*smem-query*create*result*failure
    (state <s> ^operator <o>
               ^smem.result.failure <cue>)
    (<o> ^name smem-query
         ^query-info <info>)
    (<info> ^cue <cue>)
-->
    (<info> ^result failure)
}

sp {anystate*apply*smem-query*clear*smem*command
    (state <s> ^operator <o>
               ^smem.result.{ << success failure >> } <cue>
               ^smem.command <cmd>)
    (<o> ^name smem-query
         ^query-info.cue <cue>)
    (<cmd> ^<att> <val>)
-->
    (<cmd> ^<att> <val> -)
}

# Step 1: retrieve the goal in a substate and copy to superstate
sp {init
    (state <s> ^superstate nil)
-->
    (<s> ^cue1 handle ^cue2 goal)
    }

sp {top-state*propose*retrieve-goal
    (state <s> ^superstate <ss>)
    (<ss> ^superstate nil
         -^goal
         -^deleted)
-->
    (<s> ^operator <o> +)
    (<o> ^name retrieve-goal)
}

sp {retrieve-goal*elaborate*smem-query
    (state <s> ^operator.name retrieve-goal
               ^superstate <ss>)
    (<ss> ^cue1 <handle> ^cue2 <goal>)
-->
    (<s> ^smem-query <q>)
    (<q> ^cue.<handle> <goal>
         ^depth 5)
}

sp {retrieve-goal*copy-goal
    (state <s> ^operator.name retrieve-goal
               ^smem-query.result <goal>
               ^superstate <ss>)
-->
    (<ss> ^goal <goal>)
}

sp {success
    (state <s> ^superstate nil ^goal <goal>)
-->
    (write (crlf) |Test finished.|)
    (succeeded)
    (interrupt)
}
--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'a')
    (UNEXPECTED 'a')
    (UNEXPECTED 'l')
    (UNEXPECTED 'l')
    (UNEXPECTED 'e')
    (intConstant)
    (UNEXPECTED 'm')
    (UNEXPECTED 'a')
    (intConstant)
    (UNEXPECTED 'h')
    (UNEXPECTED 'p')
    (intConstant)
    (UNEXPECTED 'p')
    (intConstant)
    (intConstant)
    (UNEXPECTED 'a')
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (intConstant)
    (UNEXPECTED 'n'))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))
          (preferenceSpecifier
            (unaryPreference
              (unaryOrBinaryPreference)))
          (preferenceSpecifier
            (unaryPreference
              (unaryOrBinaryPreference))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (conjunctiveTest
          (singleTest
            (variable))
          (relationalTest
            (relation)
            (singleTest
              (string)))
          (relationalTest
            (relation)
            (singleTest
              (string))))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (variable)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (variable))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (floatConstant)))
        (valueTest
          (singleTest
            (string)))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (conjunctiveTest
          (disjunctionTest
            (string)
            (string)))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (variable))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (variable)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference))))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string)))
      (attrValueTests
        (singleTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (preferenceSpecifier
            (unaryPreference)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (floatConstant))
        (valueMake
          (variable))
        (valueMake
          (variable)))
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string)))
    (funcCall
      (funcName
        (string)))))
