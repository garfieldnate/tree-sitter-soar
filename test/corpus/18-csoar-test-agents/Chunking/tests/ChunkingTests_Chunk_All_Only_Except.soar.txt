================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Chunk_All_Only_Except.soar
================================================================================

sp {propose*foo
   (state <s> ^superstate nil)
-->
   (<s> ^operator <o> +)
   (<o> ^name foo)
}

sp {elaborate*state
   (state <s> ^superstate <ss>)
   (<ss> ^operator.name <name>)
-->
   (<s> ^name <name>)
}

sp {propose*bar
   (state <s> ^name foo)
-->
   (<s> ^operator <o> +)
   (<o> ^name bar)
}

sp {apply*bar
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name bar)
-->
   (<ss> ^result jig)
}

sp {dont*learn
   (state <s> ^name foo)
-->
   (dont-learn <s>)
}

sp {force*learn
   (state <s> ^name foo)
-->
   (force-learn <s>)
}

sp {done
   (state <s> ^superstate nil
              ^result jig)
-->
   (interrupt)
}



--------------------------------------------------------------------------------

(source_file
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (string)
        (valueTest
          (variable))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (variable)))
      (attrValueTests
        (string)
        (valueTest
          (variable))))
    (condsForOneId
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (variable)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string))
      (variable)))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (idTest
        (variable))
      (attrValueTests
        (string)
        (valueTest
          (string)))
      (attrValueTests
        (string)
        (valueTest
          (string))))
    (funcCall
      (funcName
        (string)))))
