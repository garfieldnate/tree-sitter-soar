================================================================================
UnitTests/SoarTestAgents/Chunking/tests/ChunkingTests_Literalization_with_Constraints.soar
================================================================================

# Literalization_with_Constraints
# - Basically a literalization test with some extra tricky stuff
# - Literalized equality test in conjunction, so test should be thrown out
# - Ungrounded equality test with constraints on it that use both literalized 
#   and variablized symbols.  One constraint should propagate and literalized 
#   one should be thrown out.
                                

chunk always
watch --learn 2

sp {init
   (state <s> ^superstate nil)
-->
   (<s> ^word object ^word2 not-object)

}

sp {propose*stop
   (state <s> ^superstate.superstate.superstate nil)
-->
    (write (crlf) |Too deep.|)
    (interrupt)
}

sp {propose
    (state <s> ^superstate <ss>)
    (<ss> ^superstate nil
          ^word <w>)
-->
    (<s> ^operator <o> + =)
    (<o> ^word <w>)
}

sp {apply*literalization
    (state <s> ^superstate <ss>
               ^operator <o>)
    (<o> ^word object)
    -->
    (<s> ^sub-result ungrounded +)
}

sp {start-chunking2
    (state <s> ^superstate <ss>
               ^operator <o>
               ^sub-result {<> <not-object> <> <object> <ungrounded>})
    (<o> ^word { <> <ungrounded> <object> })
    (<ss> ^word2 {<> <object> <not-object> }
          ^word { <> <ungrounded> <object2> })
    -->
    (<ss> ^result <object> +
          ^result2 <not-object> +
          ^result3 <ungrounded> +)
}

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (UNEXPECTED 'a')
    (UNEXPECTED 'l')
    (intConstant))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)))
      (attrValueMake
        (string)
        (valueMake
          (string)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (singleTest
          (string))
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (funcCall
      (funcName
        (string))
      (crlf)
      (quoted))
    (funcCall
      (funcName
        (string))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)
          (unaryPreference))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable)))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (string)))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (string)
          (unaryPreference)))))
  (production
    (prod_name)
    (condsForOneId
      (condType)
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (singleTest
            (variable))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (condsForOneId
      (singleTest
        (variable))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable)))))
      (attrValueTests
        (singleTest
          (string))
        (valueTest
          (conjunctiveTest
            (relationalTest
              (relation)
              (singleTest
                (variable)))
            (singleTest
              (variable))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)))
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference)))
      (attrValueMake
        (string)
        (valueMake
          (variable)
          (unaryPreference))))))
