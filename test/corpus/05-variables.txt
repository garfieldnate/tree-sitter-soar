================================================================================
basic
================================================================================

sp {one-letter
    (state <s>)
-->    (<s> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (variable))))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))

================================================================================
junk name
================================================================================

sp {lots-o-garbage
    (state <AZaz09$%&*+/:=?_->)
-->    (<AZaz09$%&*+/:=?_-> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (variable))))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))

================================================================================
no alphanumeric
================================================================================

sp {lots-o-garbage
    (state <$%&*+/:=?_->)
-->    (<$%&*+/:=?_-> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (variable))))))))
    (variableMutation
      (variable)
      (attrValueMake
        (string)
        (valueMake
          (variable))))))

================================================================================
empty name disallowed
================================================================================

sp {empty
    (state <>)
-->    (<> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (ERROR
            (relation)))))
    (funcCall
      (funcName
        (string))
      (ERROR
        (UNEXPECTED 'f'))
      (variable))))

================================================================================
space disallowed
================================================================================

sp {empty
    (state <a b>)
-->    (<a b> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (string)))))
          (ERROR
            (UNEXPECTED 'b')))))
    (funcCall
      (funcName
        (string))
      (string)
      (ERROR
        (UNEXPECTED 'f'))
      (variable))))

================================================================================
empty name disallowed
================================================================================

sp {empty
    (state <>)
-->    (<> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (ERROR
            (relation)))))
    (funcCall
      (funcName
        (string))
      (ERROR
        (UNEXPECTED 'f'))
      (variable))))

================================================================================
period disallowed
================================================================================

sp {lots-o-garbage
    (state <a.a>)
-->    (<a.a> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (string)))))
          (ERROR
            (UNEXPECTED 'a')))))
    (funcCall
      (funcName
        (string))
      (floatConstant)
      (string)
      (ERROR
        (UNEXPECTED 'f'))
      (variable))))

================================================================================
forward slash disallowed
================================================================================

sp {lots-o-garbage
    (state <a\a>)
-->    (<a\a> ^foo <bar>)
}

--------------------------------------------------------------------------------

(source_file
  (production
    (beginning
      (prod_name))
    (cond
      (positiveCond
        (condsForOneId
          (condType)
          (idTest
            (test
              (simpleTest
                (singleTest
                  (string)))))
          (ERROR
            (UNEXPECTED '\')))))
    (funcCall
      (funcName
        (string))
      (ERROR
        (UNEXPECTED '\')
        (UNEXPECTED 'f'))
      (variable))))
